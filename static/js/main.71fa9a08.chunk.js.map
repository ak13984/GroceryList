{"version":3,"sources":["App.js","index.js"],"names":["App","useState","items","setItems","itemlistEmpty","setListEmpty","itemEditing","setIsItemEditing","idtobeEdited","setidtobeEdited","setSubmit","myRef","useRef","class","style","width","marginTop","display","justifyContent","height","lineHeight","type","placeholder","ref","onClick","newItems","map","item","key","name","current","value","length","className","marginRight","filter","sitem","window","location","reload","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAgGeA,EA7FL,WAAK,IAAD,EACSC,mBAAS,IADlB,mBACPC,EADO,KACDC,EADC,OAEqBF,oBAAS,GAF9B,mBAEPG,EAFO,KAEOC,EAFP,OAGwBJ,oBAAS,GAHjC,mBAGPK,EAHO,KAGMC,EAHN,OAIwBN,mBAAS,GAJjC,mBAIPO,EAJO,KAIOC,EAJP,OAKWR,oBAAS,GALpB,mBAKAS,GALA,WAQRC,EAAMC,iBAAO,IAwBjB,OACE,mCACE,sBAAKC,MAAM,OAAOC,MAAO,CAAEC,MAAO,QAASC,UAAU,QAArD,UACE,oBAAIF,MAAO,CAACG,QAAQ,OAAQC,eAAe,SAASC,OAAO,OAAQC,WAAW,QAA9E,0BACA,sBAAKN,MAAO,CAAEG,QAAS,OAAQC,eAAgB,iBAA/C,UACE,uBAAOG,KAAK,OAAOC,YAvCX,YAuCqCC,IAAKZ,EAAOG,MAAO,CAACC,MAAM,SACvE,yBAAQM,KAAK,SAASG,QA5Bb,WACjB,GAAGlB,EAAY,CACX,IAAMmB,EAASvB,EAAMwB,KAAI,SAACC,GAIzB,OAHGA,EAAKC,MAAMpB,IACXmB,EAAKE,KAAKlB,EAAMmB,QAAQC,OAEpBJ,KAMZ,OAJAhB,EAAMmB,QAAQC,MAAM,GACnBxB,GAAiB,GACdJ,EAASsB,QACTf,GAAU,GAIdP,EAAS,GAAD,mBAAKD,GAAL,CAAW,CAAC2B,KAAKlB,EAAMmB,QAAQC,MAAMH,IAAI1B,EAAM8B,OAAO,MAC9DrB,EAAMmB,QAAQC,MAAM,GAChB3B,GACJC,GAAa,GACbK,GAAU,IASF,WACIJ,GAAe,uCAChBA,GAAe,2CAGnBF,GACC,oBAAIS,MAAM,aAAV,SACGX,EAAMwB,KAAI,SAACC,GACV,OACE,qBACEM,UAAU,kBACVnB,MAAO,CAAEG,QAAS,OAAQC,eAAgB,iBAF5C,UAIE,6BAAKS,EAAKE,OACV,gCACE,wBACER,KAAK,SACLR,MAAM,yBACNC,MAAO,CAAEoB,YAAa,UACtBV,QAAS,WACPb,EAAMmB,QAAQC,MAAQJ,EAAKE,KAC3BtB,GAAiB,GACjBE,EAAgBkB,EAAKC,MAPzB,uBAYA,wBACEP,KAAK,SACLR,MAAM,wBACNW,QAAS,WACPrB,EACED,EAAMiC,QAAO,SAACC,GAAD,OAAWA,EAAMR,MAAQD,EAAKC,SALjD,+BAiBZ,wBACEP,KAAK,SAASP,MAAO,CAACK,OAAO,QAC7BK,QAAS,kBAAMa,OAAOC,SAASC,UAFjC,SAIE,mBAAGzB,MAAO,CAAC0B,MAAM,OAAjB,qC,YCnFVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.71fa9a08.chunk.js","sourcesContent":["import {useState,useEffect,useRef} from 'react'\nconst placeholder=\"e.g. eggs\";\n\nconst App=()=>{\nconst [items,setItems]=useState([]);\nconst [itemlistEmpty,setListEmpty]=useState(false);\nconst [itemEditing, setIsItemEditing]=useState(false);\nconst [idtobeEdited, setidtobeEdited]=useState(0);\nconst [submit,setSubmit]=useState(false);\n\n\nconst myRef=useRef('');\n\nconst handleSubmit=()=>{\n  if(itemEditing){\n      const newItems=items.map((item)=>{\n       if(item.key===idtobeEdited){\n          item.name=myRef.current.value;   \n       }\n       return item;\n      })\n  myRef.current.value='';   \n   setIsItemEditing(false);\n      setItems(newItems);\n      setSubmit(true);\n  return;\n    }\n\n  setItems([...items,{name:myRef.current.value,key:items.length+1}]);\n  myRef.current.value='';\n  if(!itemlistEmpty)\n  setListEmpty(true);\n  setSubmit(true);\n}\n\n  return (\n    <>\n      <div class=\"card\" style={{ width: \"25rem\", marginTop:'5rem'}}>\n        <h2 style={{display:'flex', justifyContent:'center',height:'5rem', lineHeight:'5rem'}}>Grocery List</h2>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <input type=\"text\" placeholder={placeholder} ref={myRef} style={{width:'90%'}} />\n          <button type=\"button\" onClick={handleSubmit}>\n            {!itemEditing && <p>Submit</p>}\n            {itemEditing && <p>Edit</p>}\n          </button>\n        </div>\n        {itemlistEmpty && (\n          <ul class=\"list-group\">\n            {items.map((item) => {\n              return (\n                <li\n                  className=\"list-group-item\"\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                  <h3>{item.name}</h3>\n                  <div>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-success btn-sm\"\n                      style={{ marginRight: \"0.5rem\" }}\n                      onClick={() => {\n                        myRef.current.value = item.name;\n                        setIsItemEditing(true);\n                        setidtobeEdited(item.key);\n                      }}\n                    >\n                      Edit text\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-danger btn-sm\"\n                      onClick={() => {\n                        setItems(\n                          items.filter((sitem) => sitem.key !== item.key)\n                        );\n                      }}\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        <button\n          type=\"button\" style={{height:'2rem'}}\n          onClick={() => window.location.reload()}\n        >\n          <p style={{color:'red'}}>Clear all items</p>\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\"; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}